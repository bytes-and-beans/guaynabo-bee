/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 */
@import "tailwindcss/base";

/**
 * Here we add custom base styles, applied after the tailwind-base
 * classes
 *
 */

/**
 * This injects any component classes registered by plugins.
 *
 */
 @import 'tailwindcss/components';
 
 /**
 * Here we add custom component classes; stuff we want loaded
 * *before* the utilities so that the utilities can still
 * override them.
 *
 */
 @import './components/global.pcss';
 /**
  * Any base styling for our project that we want overridden by utilities
  * Tailwind is ovveriding them with it's own base styles if we include them via 
  * @import
  */
  body {
    @apply font-sans;
    }

  h1,h2,h3,h4,h5,h6 {
    @apply font-advantage;
  }
  h1 {
    @apply text-3xl;
  }
  h2 {
    @apply text-2xl;
  }
  h3 {
  }
  h4 {
  }
  h5 {
  }
  h6 {
  }

/**
 * This injects all of Tailwind's utility classes, generated based on your
 * config file.
 *
 */
 @import 'tailwindcss/utilities';

/**
* This adds new utility classes to tailwind
*/
@layer utilities {
  /* .text-shadow-pop Adds a text shadow, either white or black, to make
     text more legible when it's background may be of a similar color/shade
  */
  .text-shadow-pop-light {
    text-shadow: 0px 0px 4px #FFF;
  }
  .text-shadow-pop-dark {
    text-shadow: 0px 0px 4px #000;
  }

  /* .hide-expand-if-alone, is used in the mobile header

     A <summary> with this class, which is the only child of a <details> will
     not display the open/close icon next to it.
   */
  .hide-expand-if-alone:only-child {
    list-style-type: none;
    padding-left: 1rem;
  }
  .hide-expand-if-alone:only-child::-webkit-details-marker {
    display:none;
    padding-left: 1rem;
  }
}

/** 
* Here we add any css that is required by the javascript
*/
/* CSS used by AlpineJS */
[x-cloak] {
    /* x-cloak, used to hide an element until AlpineJS has fully loaded,
       https://alpinejs.dev/directives/cloak
     */
    display: none !important;
}